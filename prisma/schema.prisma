// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Staff {
  id        String   @id @default(cuid())
  fullName  String
  email     String?  @unique
  active    Boolean  @default(true)
  role      String   @default("USER")
  entries   WfhEntry[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Reason {
  id        String   @id @default(cuid())
  name      String   @unique
  isActive  Boolean  @default(true)
  entries   WfhEntry[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WfhEntry {
  id             String   @id @default(cuid())
  staff          Staff    @relation(fields: [staffId], references: [id])
  staffId        String
  reason         Reason?  @relation(fields: [reasonId], references: [id])
  reasonId       String?
  freeTextReason String?
  date           DateTime
  hours          Float?
  notes          String?
  createdBy      String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@unique([staffId, date])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("USER")
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

